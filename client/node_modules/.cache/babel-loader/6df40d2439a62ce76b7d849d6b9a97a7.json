{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// import useMutation hook from apollo client\nimport{useMutation}from\"@apollo/react-hooks\";import{Form,Button,Alert}from\"react-bootstrap\";import Auth from\"../utils/auth\";// import the graphql mutation\nimport{ADD_USER}from\"../utils/mutations\";var SignupForm=function SignupForm(){// invoke useMutation hook to return a promise-based function and data about the ADD_USER mutation\nvar _useMutation=useMutation(ADD_USER),_useMutation2=_slicedToArray(_useMutation,1),addUser=_useMutation2[0];// set initial form state\nvar _useState=useState({username:\"\",email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),userFormData=_useState2[0],setUserFormData=_useState2[1];// set state for form validation\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,1),validated=_useState4[0];// set state for alert\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAlert=_useState6[0],setShowAlert=_useState6[1];var handleInputChange=function handleInputChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setUserFormData(_objectSpread(_objectSpread({},userFormData),{},_defineProperty({},name,value)));};var handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _yield$addUser,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// use try/catch since it's async\n_context.prev=1;_context.next=4;return addUser({variables:_objectSpread({},userFormData)});case 4:_yield$addUser=_context.sent;data=_yield$addUser.data;Auth.login(data.addUser.token);_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error(_context.t0);setShowAlert(true);case 13:setUserFormData({username:\"\",email:\"\",password:\"\"});case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,{noValidate:true,validated:validated,onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(Alert,{dismissible:true,onClose:function onClose(){return setShowAlert(false);},show:showAlert,variant:\"danger\"},\"Something went wrong with your signup!\"),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Your username\",name:\"username\",onChange:handleInputChange,value:userFormData.username,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Username is required!\")),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Your email address\",name:\"email\",onChange:handleInputChange,value:userFormData.email,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Email is required!\")),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Your password\",name:\"password\",onChange:handleInputChange,value:userFormData.password,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Password is required!\")),/*#__PURE__*/React.createElement(Button,{disabled:!(userFormData.username&&userFormData.email&&userFormData.password),type:\"submit\",variant:\"success\"},\"Submit\")));};export default SignupForm;","map":{"version":3,"sources":["/Users/mrao/Code/flight-chicken/client/src/components/SignupForm.js"],"names":["React","useState","useMutation","Form","Button","Alert","Auth","ADD_USER","SignupForm","addUser","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","e","target","name","value","handleFormSubmit","preventDefault","variables","data","login","token","console","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import useMutation hook from apollo client\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\n// import the graphql mutation\nimport { ADD_USER } from \"../utils/mutations\";\n\nconst SignupForm = () => {\n  // invoke useMutation hook to return a promise-based function and data about the ADD_USER mutation\n  const [addUser] = useMutation(ADD_USER);\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    // use try/catch since it's async\n    try {\n      // execute addUser mutation and pass in data from form\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (error) {\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n        {/* {error && <div>Sign up failed</div>} */}\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}