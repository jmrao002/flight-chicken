{"ast":null,"code":"var _jsxFileName = \"/Users/mrao/Code/flight-chicken/client/src/pages/SearchRoutes.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from \"react-bootstrap\"; // import the mutation we're going to execute\n\nimport { SAVE_ROUTE } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Auth from \"../utils/auth\";\nimport { saveroute, searchSkyScannerRoutes } from \"../utils/API\";\nimport { saverouteIds, getSavedrouteIds } from \"../utils/localStorage\";\n\nconst SearchRoutes = () => {\n  const [searchedroutes, setSearchedroutes] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [savedrouteIds, setSavedrouteIds] = useState(getSavedrouteIds());\n  const [saveroute, {\n    error\n  }] = useMutation(SAVE_ROUTE);\n  useEffect(() => {\n    return () => saverouteIds(savedrouteIds);\n  }); // function to search and to set state\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchSkyScannerRoutes(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const {\n        items\n      } = await response.json();\n      const routeData = items.map(route => {\n        var _route$volumeInfo$ima;\n\n        return {\n          routeId: route.id,\n          authors: route.volumeInfo.authors || [\"No author to display\"],\n          title: route.volumeInfo.title,\n          description: route.volumeInfo.description,\n          image: ((_route$volumeInfo$ima = route.volumeInfo.imageLinks) === null || _route$volumeInfo$ima === void 0 ? void 0 : _route$volumeInfo$ima.thumbnail) || \"\"\n        };\n      });\n      setSearchedroutes(routeData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  }; // function to save route and add to state\n\n\n  const handleSaveroute = async routeId => {\n    const routeToSave = searchedroutes.find(route => route.routeId === routeId);\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const {\n        data\n      } = await saveroute({\n        variables: {\n          input: routeToSave\n        }\n      });\n      setSavedrouteIds([...savedrouteIds, routeToSave.routeId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Search for routes!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, searchedroutes.length ? `Viewing ${searchedroutes.length} results:` : \"Search for a route to begin\"), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, searchedroutes.map(route => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: route.routeId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, route.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: route.image,\n      alt: `The cover for ${route.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, route.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, \"Authors: \", route.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, route.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedrouteIds === null || savedrouteIds === void 0 ? void 0 : savedrouteIds.some(savedrouteId => savedrouteId === route.routeId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveroute(route.routeId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, (savedrouteIds === null || savedrouteIds === void 0 ? void 0 : savedrouteIds.some(savedrouteId => savedrouteId === route.routeId)) ? \"This route has already been saved!\" : \"Save this route!\")));\n  }))));\n};\n\nexport default SearchRoutes;","map":{"version":3,"sources":["/Users/mrao/Code/flight-chicken/client/src/pages/SearchRoutes.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","SAVE_ROUTE","useMutation","Auth","saveroute","searchSkyScannerRoutes","saverouteIds","getSavedrouteIds","SearchRoutes","searchedroutes","setSearchedroutes","searchInput","setSearchInput","savedrouteIds","setSavedrouteIds","error","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","routeData","map","route","routeId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","handleSaveroute","routeToSave","find","token","loggedIn","getToken","data","variables","input","e","target","value","length","some","savedrouteId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n// import the mutation we're going to execute\nimport { SAVE_ROUTE } from \"../utils/mutations\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Auth from \"../utils/auth\";\nimport { saveroute, searchSkyScannerRoutes } from \"../utils/API\";\nimport { saverouteIds, getSavedrouteIds } from \"../utils/localStorage\";\n\nconst SearchRoutes = () => {\n  const [searchedroutes, setSearchedroutes] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const [savedrouteIds, setSavedrouteIds] = useState(getSavedrouteIds());\n\n  const [saveroute, { error }] = useMutation(SAVE_ROUTE);\n\n  useEffect(() => {\n    return () => saverouteIds(savedrouteIds);\n  });\n\n  // function to search and to set state\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchSkyScannerRoutes(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const { items } = await response.json();\n\n      const routeData = items.map((route) => ({\n        routeId: route.id,\n        authors: route.volumeInfo.authors || [\"No author to display\"],\n        title: route.volumeInfo.title,\n        description: route.volumeInfo.description,\n        image: route.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedroutes(routeData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // function to save route and add to state\n  const handleSaveroute = async (routeId) => {\n    const routeToSave = searchedroutes.find(\n      (route) => route.routeId === routeId\n    );\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveroute({\n        variables: { input: routeToSave },\n      });\n\n      setSavedrouteIds([...savedrouteIds, routeToSave.routeId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for routes!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a route\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedroutes.length\n            ? `Viewing ${searchedroutes.length} results:`\n            : \"Search for a route to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedroutes.map((route) => {\n            return (\n              <Card key={route.routeId} border=\"dark\">\n                {route.image ? (\n                  <Card.Img\n                    src={route.image}\n                    alt={`The cover for ${route.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{route.title}</Card.Title>\n                  <p className=\"small\">Authors: {route.authors}</p>\n                  <Card.Text>{route.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedrouteIds?.some(\n                        (savedrouteId) => savedrouteId === route.routeId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveroute(route.routeId)}\n                    >\n                      {savedrouteIds?.some(\n                        (savedrouteId) => savedrouteId === route.routeId\n                      )\n                        ? \"This route has already been saved!\"\n                        : \"Save this route!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchRoutes;\n"]},"metadata":{},"sourceType":"module"}