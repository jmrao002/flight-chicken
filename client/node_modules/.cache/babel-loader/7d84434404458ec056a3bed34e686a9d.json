{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mrao/Code/flight-chicken/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button,Alert}from\"react-bootstrap\";import Auth from\"../utils/auth\";import{useMutation}from\"@apollo/react-hooks\";import{LOGIN_USER}from\"../utils/mutations\";var LoginForm=function LoginForm(){var _useMutation=useMutation(LOGIN_USER),_useMutation2=_slicedToArray(_useMutation,2),loginUser=_useMutation2[0],error=_useMutation2[1].error;var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),userFormData=_useState2[0],setUserFormData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,1),validated=_useState4[0];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAlert=_useState6[0],setShowAlert=_useState6[1];var handleInputChange=function handleInputChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setUserFormData(_objectSpread(_objectSpread({},userFormData),{},_defineProperty({},name,value)));};var handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _yield$loginUser,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return loginUser({variables:_objectSpread({},userFormData)});case 4:_yield$loginUser=_context.sent;data=_yield$loginUser.data;Auth.login(data.login.token);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 12:setUserFormData({username:\"\",email:\"\",password:\"\"});case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,{noValidate:true,validated:validated,onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(Alert,{dismissible:true,onClose:function onClose(){return setShowAlert(false);},show:showAlert,variant:\"danger\"},\"Something went wrong with your login credentials!\"),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Your email\",name:\"email\",onChange:handleInputChange,value:userFormData.email,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Email is required!\")),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Your password\",name:\"password\",onChange:handleInputChange,value:userFormData.password,required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},\"Password is required!\")),/*#__PURE__*/React.createElement(Button,{disabled:!(userFormData.email&&userFormData.password),type:\"submit\",variant:\"success\"},\"Submit\")),error&&/*#__PURE__*/React.createElement(\"div\",null,\"Login failed\"));};export default LoginForm;","map":{"version":3,"sources":["/Users/mrao/Code/flight-chicken/client/src/components/LoginForm.js"],"names":["React","useState","Form","Button","Alert","Auth","useMutation","LOGIN_USER","LoginForm","loginUser","error","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","e","target","name","value","handleFormSubmit","preventDefault","variables","data","login","token","console","username"],"mappings":"+wBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,KAAvB,KAAoC,iBAApC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CAEA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,UAAT,KAA2B,oBAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,iBAA+BF,WAAW,CAACC,UAAD,CAA1C,8CAAOE,SAAP,kBAAoBC,KAApB,kBAAoBA,KAApB,CACA,cAAwCT,QAAQ,CAAC,CAAEU,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CAAhD,wCAAOC,YAAP,eAAqBC,eAArB,eACA,eAAoBb,QAAQ,CAAC,KAAD,CAA5B,yCAAOc,SAAP,eACA,eAAkCd,QAAQ,CAAC,KAAD,CAA1C,yCAAOe,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/B,cAAwBA,CAAC,CAACC,MAA1B,CAAQC,IAAR,WAAQA,IAAR,CAAcC,KAAd,WAAcA,KAAd,CACAR,eAAe,gCAAMD,YAAN,wBAAqBQ,IAArB,CAA4BC,KAA5B,GAAf,CACD,CAHD,CAKA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAOJ,CAAP,4IACvBA,CAAC,CAACK,cAAF,GADuB,sCAIEf,CAAAA,SAAS,CAAC,CAC/BgB,SAAS,kBAAOZ,YAAP,CADsB,CAAD,CAJX,uCAIba,IAJa,kBAIbA,IAJa,CAQrBrB,IAAI,CAACsB,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWC,KAAtB,EARqB,+EAUrBC,OAAO,CAACnB,KAAR,cAVqB,QAavBI,eAAe,CAAC,CACdgB,QAAQ,CAAE,EADI,CAEdnB,KAAK,CAAE,EAFO,CAGdC,QAAQ,CAAE,EAHI,CAAD,CAAf,CAbuB,oEAAH,kBAAhBW,CAAAA,gBAAgB,4CAAtB,CAoBA,mBACE,qDACE,oBAAC,IAAD,EAAM,UAAU,KAAhB,CAAiB,SAAS,CAAER,SAA5B,CAAuC,QAAQ,CAAEQ,gBAAjD,eACE,oBAAC,KAAD,EACE,WAAW,KADb,CAEE,OAAO,CAAE,yBAAMN,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAFX,CAGE,IAAI,CAAED,SAHR,CAIE,OAAO,CAAC,QAJV,sDADF,cASE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAC,OAApB,UADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,YAFd,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,CAAEE,iBAJZ,CAKE,KAAK,CAAEL,YAAY,CAACF,KALtB,CAME,QAAQ,KANV,EAFF,cAUE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,uBAVF,CATF,cAwBE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAC,UAApB,aADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,eAFd,CAGE,IAAI,CAAC,UAHP,CAIE,QAAQ,CAAEO,iBAJZ,CAKE,KAAK,CAAEL,YAAY,CAACD,QALtB,CAME,QAAQ,KANV,EAFF,cAUE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,0BAVF,CAxBF,cAsCE,oBAAC,MAAD,EACE,QAAQ,CAAE,EAAEC,YAAY,CAACF,KAAb,EAAsBE,YAAY,CAACD,QAArC,CADZ,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAC,SAHV,WAtCF,CADF,CA+CGF,KAAK,eAAI,8CA/CZ,CADF,CAmDD,CAlFD,CAoFA,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nconst LoginForm = () => {\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n      {error && <div>Login failed</div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}