{"ast":null,"code":"// route to get logged in user's info (needs the token)\nexport var getMe=function getMe(token){return fetch(\"/api/users/me\",{headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(token)}});};export var createUser=function createUser(userData){return fetch(\"/api/users\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});};export var loginUser=function loginUser(userData){return fetch(\"/api/users/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});};// save route data for a logged in user\nexport var saveroute=function saveroute(routeData,token){return fetch(\"/api/users\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(token)},body:JSON.stringify(routeData)});};// remove saved route data for a logged in user\nexport var deleteroute=function deleteroute(routeId,token){return fetch(\"/api/users/routes/\".concat(routeId),{method:\"DELETE\",headers:{authorization:\"Bearer \".concat(token)}});};// make a search to skyscanner API\n// https://rapidapi.com/skyscanner/api/skyscanner-flight-search\nexport var searchSkyScannerRoutes=function searchSkyScannerRoutes(query){return fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/\".concat(query));};","map":{"version":3,"sources":["/Users/mrao/Code/flight-chicken/client/src/utils/API.js"],"names":["getMe","token","fetch","headers","authorization","createUser","userData","method","body","JSON","stringify","loginUser","saveroute","routeData","deleteroute","routeId","searchSkyScannerRoutes","query"],"mappings":"AAAA;AACA,MAAO,IAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CAC9B,MAAOC,CAAAA,KAAK,CAAC,eAAD,CAAkB,CAC5BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,KAAZ,CAFN,CADmB,CAAlB,CAAZ,CAMD,CAPM,CASP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,CAAc,CACtC,MAAOJ,CAAAA,KAAK,CAAC,YAAD,CAAe,CACzBK,MAAM,CAAE,MADiB,CAEzBJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAFgB,CAKzBK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALmB,CAAf,CAAZ,CAOD,CARM,CAUP,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACL,QAAD,CAAc,CACrC,MAAOJ,CAAAA,KAAK,CAAC,kBAAD,CAAqB,CAC/BK,MAAM,CAAE,MADuB,CAE/BJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAK/BK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALyB,CAArB,CAAZ,CAOD,CARM,CAUP;AACA,MAAO,IAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,SAAD,CAAYZ,KAAZ,CAAsB,CAC7C,MAAOC,CAAAA,KAAK,CAAC,YAAD,CAAe,CACzBK,MAAM,CAAE,KADiB,CAEzBJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,KAAZ,CAFN,CAFgB,CAMzBO,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeG,SAAf,CANmB,CAAf,CAAZ,CAQD,CATM,CAWP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAUd,KAAV,CAAoB,CAC7C,MAAOC,CAAAA,KAAK,6BAAsBa,OAAtB,EAAiC,CAC3CR,MAAM,CAAE,QADmC,CAE3CJ,OAAO,CAAE,CACPC,aAAa,kBAAYH,KAAZ,CADN,CAFkC,CAAjC,CAAZ,CAMD,CAPM,CASP;AACA;AACA,MAAO,IAAMe,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,CAC/C,MAAOf,CAAAA,KAAK,oHACkGe,KADlG,EAAZ,CAGD,CAJM","sourcesContent":["// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch(\"/api/users/me\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch(\"/api/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch(\"/api/users/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save route data for a logged in user\nexport const saveroute = (routeData, token) => {\n  return fetch(\"/api/users\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(routeData),\n  });\n};\n\n// remove saved route data for a logged in user\nexport const deleteroute = (routeId, token) => {\n  return fetch(`/api/users/routes/${routeId}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to skyscanner API\n// https://rapidapi.com/skyscanner/api/skyscanner-flight-search\nexport const searchSkyScannerRoutes = (query) => {\n  return fetch(\n    `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/${query}`\n  );\n};\n"]},"metadata":{},"sourceType":"module"}