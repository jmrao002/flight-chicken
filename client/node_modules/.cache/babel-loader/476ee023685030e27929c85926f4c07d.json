{"ast":null,"code":"var _jsxFileName = \"/Users/mrao/Code/flight-chicken/client/src/components/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nconst LoginForm = () => {\n  const [loginUser, {\n    error\n  }] = useMutation(LOGIN_USER);\n  const [userFormData, setUserFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await loginUser({\n        variables: { ...userFormData\n        }\n      });\n      Auth.login(data.login.token);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    dismissible: true,\n    onClose: () => setShowAlert(false),\n    show: showAlert,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Something went wrong with your login credentials!\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Your email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    value: userFormData.email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Email is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Your password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    value: userFormData.password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Password is required!\")), /*#__PURE__*/React.createElement(Button, {\n    disabled: !(userFormData.email && userFormData.password),\n    type: \"submit\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Submit\")), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Login failed\"));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/mrao/Code/flight-chicken/client/src/components/LoginForm.js"],"names":["React","useState","Form","Button","Alert","Auth","useMutation","LOGIN_USER","LoginForm","loginUser","error","userFormData","setUserFormData","email","password","validated","showAlert","setShowAlert","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","data","variables","login","token","console","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAyBJ,WAAW,CAACC,UAAD,CAA1C;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAhD;AACA,QAAM,CAACC,SAAD,IAAcd,QAAQ,CAAC,KAAD,CAA5B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMiB,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAV,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmB,OAACS,IAAD,GAAQC;AAA3B,KAAD,CAAf;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAG,MAAOJ,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMhB,SAAS,CAAC;AAC/BiB,QAAAA,SAAS,EAAE,EAAE,GAAGf;AAAL;AADoB,OAAD,CAAhC;AAIAN,MAAAA,IAAI,CAACsB,KAAL,CAAWF,IAAI,CAACE,KAAL,CAAWC,KAAtB;AACD,KAND,CAME,OAAOlB,KAAP,EAAc;AACdmB,MAAAA,OAAO,CAACnB,KAAR,CAAcA,KAAd;AACD;;AAEDE,IAAAA,eAAe,CAAC;AACdkB,MAAAA,QAAQ,EAAE,EADI;AAEdjB,MAAAA,KAAK,EAAE,EAFO;AAGdC,MAAAA,QAAQ,EAAE;AAHI,KAAD,CAAf;AAKD,GAlBD;;AAoBA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEC,SAA5B;AAAuC,IAAA,QAAQ,EAAEQ,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,OAAO,EAAE,MAAMN,YAAY,CAAC,KAAD,CAF7B;AAGE,IAAA,IAAI,EAAED,SAHR;AAIE,IAAA,OAAO,EAAC,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,QAAQ,EAAEE,iBAJZ;AAKE,IAAA,KAAK,EAAEP,YAAY,CAACE,KALtB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,CATF,eAwBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAEK,iBAJZ;AAKE,IAAA,KAAK,EAAEP,YAAY,CAACG,QALtB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVF,CAxBF,eAsCE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,EAAEH,YAAY,CAACE,KAAb,IAAsBF,YAAY,CAACG,QAArC,CADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF,CADF,EA+CGJ,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/CZ,CADF;AAmDD,CAlFD;;AAoFA,eAAeF,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nconst LoginForm = () => {\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n      {error && <div>Login failed</div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}